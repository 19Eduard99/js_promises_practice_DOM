{"mappings":"ACEA,IAAM,EAAW,SAAS,aAAa,CAAC,SAElC,EAAe,SAAC,CAAtB,EACE,IAAM,EAAkB,SAAS,aAAa,CAAC,OAE/C,EAAgB,YAAY,CAAC,UAAW,gBACxC,EAAgB,SAAS,CAAC,GAAG,CAAC,WAC9B,EAAgB,WAAW,CAAG,EAE1B,aAAmB,QACrB,EAAgB,SAAS,CAAC,MAAM,CAAC,WACjC,EAAgB,SAAS,CAAC,GAAG,CAAC,SAC9B,EAAgB,WAAW,CAAG,EAAQ,OAAO,EAG/C,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,EAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,EAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,6BACV,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA5C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,8BACV,GAEA,SAAS,gBAAgB,CAAC,cAAe,WACvC,EAAQ,8BACV,EACF,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EAcW,IAAA,EAAT,WACe,CAAA,IAAT,GAAiB,AAAU,CAAA,IAAV,GACnB,EAAQ,6BAEZ,EAjBI,EAAO,CAAA,EACP,EAAQ,CAAA,EAEZ,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAO,CAAA,EACP,GACF,GAEA,SAAS,gBAAgB,CAAC,cAAe,WACvC,EAAQ,CAAA,EACR,GACF,EAOF,GAEA,EAAa,IAAI,CAAC,GAAc,KAAK,CAAC,GACtC,EAAc,IAAI,CAAC,GACnB,EAAa,IAAI,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar logoMate = document.querySelector(\".logo\");\nvar notification = function(message) {\n    var notificationDiv = document.createElement(\"div\");\n    notificationDiv.setAttribute(\"data-qa\", \"notification\");\n    notificationDiv.classList.add(\"success\");\n    notificationDiv.textContent = message;\n    if (message instanceof Error) {\n        notificationDiv.classList.remove(\"success\");\n        notificationDiv.classList.add(\"error\");\n        notificationDiv.textContent = message.message;\n    }\n    document.body.append(notificationDiv);\n};\nvar firstPromise = new Promise(function(resolve, reject) {\n    logoMate.addEventListener(\"click\", function() {\n        resolve(\"First promise was resolved\");\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n});\nvar thirdPromise = new Promise(function(resolve, reject) {\n    var checkCondition = function checkCondition() {\n        if (left === true && right === true) resolve(\"Third promise was resolved\");\n    };\n    var left = false;\n    var right = false;\n    document.addEventListener(\"click\", function() {\n        left = true;\n        checkCondition();\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        right = true;\n        checkCondition();\n    });\n});\nfirstPromise.then(notification).catch(notification);\nsecondPromise.then(notification);\nthirdPromise.then(notification);\n\n//# sourceMappingURL=index.81b7247b.js.map\n","'use strict';\n\nconst logoMate = document.querySelector('.logo');\n\nconst notification = (message) => {\n  const notificationDiv = document.createElement('div');\n\n  notificationDiv.setAttribute('data-qa', 'notification');\n  notificationDiv.classList.add('success');\n  notificationDiv.textContent = message;\n\n  if (message instanceof Error) {\n    notificationDiv.classList.remove('success');\n    notificationDiv.classList.add('error');\n    notificationDiv.textContent = message.message;\n  }\n\n  document.body.append(notificationDiv);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  logoMate.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', () => {\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  let left = false;\n  let right = false;\n\n  document.addEventListener('click', () => {\n    left = true;\n    checkCondition();\n  });\n\n  document.addEventListener('contextmenu', () => {\n    right = true;\n    checkCondition();\n  });\n\n  function checkCondition() {\n    if (left === true && right === true) {\n      resolve('Third promise was resolved');\n    }\n  }\n});\n\nfirstPromise.then(notification).catch(notification);\nsecondPromise.then(notification);\nthirdPromise.then(notification);\n"],"names":["logoMate","document","querySelector","notification","message","notificationDiv","createElement","setAttribute","classList","add","textContent","Error","remove","body","append","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","secondPromise","thirdPromise","checkCondition","left","right","then","catch"],"version":3,"file":"index.81b7247b.js.map"}